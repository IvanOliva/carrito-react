{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nimport ShopActionsTypes from './shop.types';\nexport function* fetchCollectionAsync() {\n  try {} catch (error) {}\n\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionStart());\n  collectionRef.get().then(snapshot => {\n    const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionSuccess(collectionMap));\n  }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionsTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/ivan/Aprendiendo/carrito-react/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","ShopActionsTypes","fetchCollectionAsync","error","collectionRef","collection","dispatch","fetchCollectionStart","get","then","snapshot","collectionMap","fetchCollectionSuccess","catch","fetchCollectionFailure","message","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AAEA,OAAOC,gBAAP,MAA6B,cAA7B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,MAAI,CAEH,CAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;;AACD,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,QAAQ,CAACC,oBAAoB,EAArB,CAAR;AACAH,EAAAA,aAAa,CAACI,GAAd,GAAoBC,IAApB,CACIC,QAAQ,IAAI;AACR,UAAMC,aAAa,GAAGX,+BAA+B,CAACU,QAAD,CAArD;AACAJ,IAAAA,QAAQ,CAACM,sBAAsB,CAACD,aAAD,CAAvB,CAAR;AACH,GAJL,EAKEE,KALF,CAKQV,KAAK,IAAIG,QAAQ,CAACQ,sBAAsB,CAACX,KAAK,CAACY,OAAP,CAAvB,CALzB;AAMH;AAED,OAAO,UAAUR,oBAAV,GAAiC;AACpC,QAAMT,SAAS,CACXG,gBAAgB,CAACe,sBADN,EAEXd,oBAFW,CAAf;AAGH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\n\nimport ShopActionsTypes from './shop.types';\n\nexport function* fetchCollectionAsync() {\n    try {\n\n    } catch (error) {\n\n    }\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(\n        snapshot => {\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionSuccess(collectionMap));\n        }\n    ).catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\n\nexport function* fetchCollectionStart() {\n    yield takeEvery(\n        ShopActionsTypes.FETCH_COLLECTION_START,\n        fetchCollectionAsync)\n}"]},"metadata":{},"sourceType":"module"}