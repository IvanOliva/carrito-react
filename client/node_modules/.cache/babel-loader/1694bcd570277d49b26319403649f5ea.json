{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\nimport ShopActionsTypes from './shop.types';\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n  } catch (error) {}\n\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionSuccess(collectionMap));\n  }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionsTypes.FETCH_COLLECTION_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/ivan/Aprendiendo/carrito-react/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","ShopActionsTypes","fetchCollectionAsync","collectionRef","collection","snapshot","get","error","then","collectionMap","dispatch","fetchCollectionSuccess","catch","fetchCollectionFailure","message","fetchCollectionStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AAEA,OAAOC,gBAAP,MAA6B,cAA7B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,MAAI;AACA,UAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc,CAEf;;AACD,QAAMJ,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACAD,EAAAA,aAAa,CAACG,GAAd,GAAoBE,IAApB,CACIH,QAAQ,IAAI;AACR,UAAMI,aAAa,GAAGT,+BAA+B,CAACK,QAAD,CAArD;AACAK,IAAAA,QAAQ,CAACC,sBAAsB,CAACF,aAAD,CAAvB,CAAR;AACH,GAJL,EAKEG,KALF,CAKQL,KAAK,IAAIG,QAAQ,CAACG,sBAAsB,CAACN,KAAK,CAACO,OAAP,CAAvB,CALzB;AAMH;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMlB,SAAS,CACXI,gBAAgB,CAACe,sBADN,EAEXd,oBAFW,CAAf;AAGH","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util';\n\nimport ShopActionsTypes from './shop.types';\n\nexport function* fetchCollectionAsync() {\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get()\n    } catch (error) {\n\n    }\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(\n        snapshot => {\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionSuccess(collectionMap));\n        }\n    ).catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\n\nexport function* fetchCollectionStart() {\n    yield takeEvery(\n        ShopActionsTypes.FETCH_COLLECTION_START,\n        fetchCollectionAsync)\n}"]},"metadata":{},"sourceType":"module"}