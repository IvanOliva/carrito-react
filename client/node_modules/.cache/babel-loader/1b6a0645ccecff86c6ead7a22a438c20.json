{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ivan/Aprendiendo/carrito-react/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util.js';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    console.log('componentDidmoubnt');\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(collectionMap(collectionMap))\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/ivan/Aprendiendo/carrito-react/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","console","log","collectionRef","collection","onSnapshot","snapshot","collectionMap","render","match","props","path","mapDispatchToProps","dispatch","updateCollections"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,iCAA3D;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,uBADmC,GACT,IADS;AAAA;;AAEnCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,aAAa,GAAGX,+BAA+B,CAACU,QAAD,CAArD;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ;AACH,KAHD;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAElB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEgB,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAEjB;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAnBkC;;AAsBvC,MAAMkB,kBAAkB,GAAIC,QAAD,KAAe;AACtCC,EAAAA,iBAAiB,EAAEP,aAAa,IAAIM,QAAQ,CAACN,aAAa,CAACA,aAAD,CAAd;AADN,CAAf,CAA3B;;AAIA,eAAeV,QAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.util.js';\n\nclass ShopPage extends React.Component {\n    unsubscribeFromSnapshot = null;\n    componentDidMount() {\n        console.log('componentDidmoubnt')\n        const collectionRef = firestore.collection('collections');\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n            console.log(collectionMap);\n        });\n    }\n\n    render() {\n        const { match } = this.props;\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} component={CollectionOverview} />\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateCollections: collectionMap => dispatch(collectionMap(collectionMap))\n})\n\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}