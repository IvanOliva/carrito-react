{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport { logger } from 'redux-logger';\nimport rootReducers from './root-reducer';\nimport { fetchCollectionStart } from '../redux/shop/shop.sagas';\nconst asdsagaMiddleware = createSagaMiddleware();\nconsole.log({\n  createSagaMiddleware\n});\nconst middleWares = [asdsagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middleWares.push(logger);\n}\n\nexport const store = createStore(rootReducers, applyMiddleware(...middleWares));\nasdsagaMiddleware.run(fetchCollectionStart);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/home/ivan/Aprendiendo/carrito-react/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","createSagaMiddleware","logger","rootReducers","fetchCollectionStart","asdsagaMiddleware","console","log","middleWares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAASC,oBAAT,QAAqC,0BAArC;AAEA,MAAMC,iBAAiB,GAAGJ,oBAAoB,EAA9C;AACAK,OAAO,CAACC,GAAR,CAAY;AAAEN,EAAAA;AAAF,CAAZ;AAEA,MAAMO,WAAW,GAAG,CAACH,iBAAD,CAApB;;AAEA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAGf,WAAW,CAACK,YAAD,EAAeJ,eAAe,CAAC,GAAGS,WAAJ,CAA9B,CAAzB;AAEPH,iBAAiB,CAACS,GAAlB,CAAsBV,oBAAtB;AAEA,OAAO,MAAMW,SAAS,GAAGf,YAAY,CAACa,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport { logger } from 'redux-logger';\nimport rootReducers from './root-reducer'\n\nimport { fetchCollectionStart } from '../redux/shop/shop.sagas';\n\nconst asdsagaMiddleware = createSagaMiddleware();\nconsole.log({ createSagaMiddleware })\n\nconst middleWares = [asdsagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n    middleWares.push(logger);\n}\n\nexport const store = createStore(rootReducers, applyMiddleware(...middleWares));\n\nasdsagaMiddleware.run(fetchCollectionStart);\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor }; "]},"metadata":{},"sourceType":"module"}