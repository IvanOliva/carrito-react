{"ast":null,"code":"import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.util';\nimport UserActionTypes from './user.types';\nimport { googleSignInFailure, googleSignInSuccess, emailSignInFailure, emailSignInSuccess } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    console.log(googleProvider);\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  } // this.unsuscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //     if (userAuth) {\n  //         const userRef = await createUserProfileDocument(userAuth);\n  //         userRef.onSnapshot(snapShot => {\n  //             setCurrentUser({\n  //                 id: snapShot.id,\n  //                 ...snapShot.data()\n  //             });\n  //         });\n  //     }\n  //     setCurrentUser(userAuth);\n  // });\n\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* emailSignIn() {}\nexport function* onEmailSignIn() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}\n;","map":{"version":3,"sources":["/home/ivan/Aprendiendo/carrito-react/src/redux/user/user.sagas.js"],"names":["put","takeLatest","all","call","auth","googleProvider","createUserProfileDocument","UserActionTypes","googleSignInFailure","googleSignInSuccess","emailSignInFailure","emailSignInSuccess","signInWithGoogle","console","log","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","emailSignIn","onEmailSignIn","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,8BAAhE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,cAAZ;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMX,IAAI,CAACY,eAAL,CAAqBX,cAArB,CAAvB;AACA,UAAMY,OAAO,GAAG,MAAMd,IAAI,CAACG,yBAAD,EAA4BS,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CAACS,mBAAmB,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAApB,CAAT;AACH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACQ,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACH,GAT+B,CAWhC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;AAAA;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMtB,UAAU,CAACM,eAAe,CAACiB,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUa,WAAV,GAAwB,CAE9B;AAED,OAAO,UAAUC,aAAV,GAA0B;AAC7B,QAAMzB,UAAU,CAACM,eAAe,CAACoB,mBAAjB,CAAhB;AACH;AAED,OAAO,UAAUC,SAAV,GAAsB;AACzB,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACoB,mBAAD,CAAL,CAAD,CAAT;AACH;AAAA","sourcesContent":["import { put, takeLatest, all, call } from 'redux-saga/effects';\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.util';\n\nimport UserActionTypes from './user.types';\nimport { googleSignInFailure, googleSignInSuccess, emailSignInFailure, emailSignInSuccess } from './user.actions';\n\nexport function* signInWithGoogle() {\n    try {\n        console.log(googleProvider);\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (error) {\n        yield put(googleSignInFailure(error));\n    }\n\n    // this.unsuscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //     if (userAuth) {\n    //         const userRef = await createUserProfileDocument(userAuth);\n\n    //         userRef.onSnapshot(snapShot => {\n    //             setCurrentUser({\n    //                 id: snapShot.id,\n    //                 ...snapShot.data()\n    //             });\n    //         });\n    //     }\n    //     setCurrentUser(userAuth);\n    // });\n};\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport function* emailSignIn() {\n\n}\n\nexport function* onEmailSignIn() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,)\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart)])\n};"]},"metadata":{},"sourceType":"module"}