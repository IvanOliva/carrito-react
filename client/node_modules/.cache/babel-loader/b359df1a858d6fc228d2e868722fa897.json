{"ast":null,"code":"import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.util';\nimport UserActionTypes from './user.types';\nimport { signInFailure, signInSuccess, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUp() {\n  try {} catch (error) {\n    yield put(signUpFailure(errror));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignIn() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignIn), call(onCheckUserSession), call(onSignOutStart)]);\n}\n;","map":{"version":3,"sources":["/home/ivan/Aprendiendo/carrito-react/src/redux/user/user.sagas.js"],"names":["put","takeLatest","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","signInFailure","signInSuccess","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","emailSignIn","payload","email","password","signInWithEmailAndPassword","signUp","errror","signOut","isUserAuthenticated","onEmailSignIn","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { put, takeLatest, all, call } from 'redux-saga/effects';\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.util';\n\nimport UserActionTypes from './user.types';\nimport {\n    signInFailure,\n    signInSuccess,\n    signOutSuccess,\n    signOutFailure,\n    signUpSuccess,\n    signUpFailure\n} from './user.actions';\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n};\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport function* emailSignIn({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signUp() {\n    try {\n\n    } catch (error) {\n        yield put(signUpFailure(errror));\n    }\n}\n\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    } catch (error) {\n        yield put(signOutFailure(error))\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* onEmailSignIn() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn)\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignIn), call(onCheckUserSession), call(onSignOutStart)])\n};"]},"metadata":{},"sourceType":"module"}