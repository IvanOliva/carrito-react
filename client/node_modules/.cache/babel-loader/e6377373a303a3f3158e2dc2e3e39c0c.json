{"ast":null,"code":"import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.util';\nimport UserActionTypes from './user.types';\nimport { signInFailure, signInSuccess, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure, emailSignInStart } from './user.actions';\nexport function* getSnapshotFromUserAuth({\n  userAuth,\n  aditionalData\n}) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, aditionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    console.log(email);\n    console.log(password);\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(user);\n    yield getSnapshotFromUserAuth({\n      user,\n      aditionalData: null\n    });\n  } catch (error) {\n    console.log(error);\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      aditionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  user,\n  aditionalData\n}) {\n  yield getSnapshotFromUserAuth(user, aditionalData);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignIn() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignIn), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}\n;","map":{"version":3,"sources":["/home/ivan/Aprendiendo/carrito-react/src/redux/user/user.sagas.js"],"names":["put","takeLatest","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","signInFailure","signInSuccess","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","emailSignInStart","getSnapshotFromUserAuth","userAuth","aditionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","emailSignIn","payload","email","password","console","log","signInWithEmailAndPassword","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","signOut","isUserAuthenticated","onEmailSignIn","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { put, takeLatest, all, call } from 'redux-saga/effects';\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.util';\n\nimport UserActionTypes from './user.types';\nimport {\n    signInFailure,\n    signInSuccess,\n    signOutSuccess,\n    signOutFailure,\n    signUpSuccess,\n    signUpFailure,\n    emailSignInStart\n} from './user.actions';\n\nexport function* getSnapshotFromUserAuth({ userAuth, aditionalData }) {\n    try {\n        const userRef = yield call(createUserProfileDocument,\n            userAuth,\n            aditionalData);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n};\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport function* emailSignIn({ payload: { email, password } }) {\n    try {\n        console.log(email);\n        console.log(password);\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        console.log(user)\n        yield getSnapshotFromUserAuth({ user, aditionalData: null });\n    } catch (error) {\n        console.log(error)\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signUp({ payload: { displayName, email, password } }) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n        yield put(signUpSuccess({ user, aditionalData: { displayName } }));\n    } catch (error) {\n        yield put(signUpFailure(error));\n    }\n}\n\nexport function* signInAfterSignUp({ user, aditionalData }) {\n    yield getSnapshotFromUserAuth(user, aditionalData);\n}\n\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    } catch (error) {\n        yield put(signOutFailure(error))\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* onEmailSignIn() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignIn)\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignIn),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUpStart),\n        call(onSignUpSuccess)\n    ],\n    )\n};"]},"metadata":{},"sourceType":"module"}