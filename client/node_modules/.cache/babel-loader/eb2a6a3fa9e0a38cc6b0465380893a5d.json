{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ivan/Aprendiendo/carrito-react/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.componenet';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"I've already has an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Sign in with your username and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Email\",\n          required: true,\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Password\",\n          required: true,\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            value: \"Submit Form\",\n            children: \"SIGN IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"SIGN IN WITH GOOGLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/ivan/Aprendiendo/carrito-react/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.componenet'\nimport CustomButton from '../custom-button/custom-button.component'\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { emailSignInStart } = this.props;\n        const { email, password } = this.state;\n        emailSignInStart(email, password);\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({ [name]: value })\n    }\n\n    render() {\n        const { googleSignInStart } = this.props;\n        return (\n            <div className='sign-in'>\n                <h2 className='title'>\n                    I've already has an account\n                </h2>\n                <span> Sign in with your username and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        label='Email'\n                        required\n                        name='email'\n                        type='email'\n                        value={this.state.email}\n                        handleChange={this.handleChange} />\n\n                    <FormInput\n                        label='Password'\n                        required\n                        name='password'\n                        type='password'\n                        value={this.state.password}\n                        handleChange={this.handleChange}\n                    />\n                    <div className='buttons'>\n                        <CustomButton type='submit' value='Submit Form'>SIGN IN</CustomButton>\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>SIGN IN WITH GOOGLE</CustomButton>\n                    </div>\n\n\n                </form>\n\n\n            </div>\n        );\n    };\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}