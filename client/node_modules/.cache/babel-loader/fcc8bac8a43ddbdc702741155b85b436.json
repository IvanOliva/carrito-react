{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDXpQjyeS6q7WI1P3IBcEqzUPosrwlVrB8\",\n  authDomain: \"crown-db-3519e.firebaseapp.com\",\n  projectId: \"crown-db-3519e\",\n  storageBucket: \"crown-db-3519e.appspot.com\",\n  messagingSenderId: \"300314595285\",\n  appId: \"1:300314595285:web:038df28a8f7fcb546bf75c\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('Error creating user', error);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionsAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionKey);\n  console.log(collectionRef);\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const sigInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/ivan/Aprendiendo/carrito-react/src/firebase/firebase.util.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","addCollectionsAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","provider","GoogleAuthProvider","setCustomParameters","prompt","sigInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,SAAS,EAAE,gBAHA;AAIXC,EAAAA,aAAa,EAAE,4BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE;AANI,CAAf;AASAP,QAAQ,CAACQ,aAAT,CAAuBP,MAAvB;AAEA,OAAO,MAAMQ,IAAI,GAAGT,QAAQ,CAACS,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGV,QAAQ,CAACU,SAAT,EAAlB;AAEP,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBT,QAA/B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACA,YAAMT,OAAO,CAACU,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGT;AAJW,OAAZ,CAAN;AAOH,KARD,CAQE,OAAOY,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACH;AACJ;;AACD,SAAOX,OAAP;AACH,CArBM;AAuBP,OAAO,MAAMc,0BAA0B,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACvE,QAAMC,aAAa,GAAGrB,SAAS,CAACsB,UAAV,CAAqBH,aAArB,CAAtB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYE,aAAZ;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYI,aAAZ;AACH,CAJM;AAMP,MAAME,QAAQ,GAAG,IAAIjC,QAAQ,CAACS,IAAT,CAAcyB,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,eAAe,GAAG,MAAM5B,IAAI,CAAC6B,eAAL,CAAqBL,QAArB,CAA9B;AAEP,eAAejC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyDXpQjyeS6q7WI1P3IBcEqzUPosrwlVrB8\",\n    authDomain: \"crown-db-3519e.firebaseapp.com\",\n    projectId: \"crown-db-3519e\",\n    storageBucket: \"crown-db-3519e.appspot.com\",\n    messagingSenderId: \"300314595285\",\n    appId: \"1:300314595285:web:038df28a8f7fcb546bf75c\",\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n\n        } catch (error) {\n            console.log('Error creating user', error);\n        }\n    }\n    return userRef;\n}\n\nexport const addCollectionsAndDocuments = (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n    console.log(collectionKey);\n    console.log(collectionRef);\n}\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const sigInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}